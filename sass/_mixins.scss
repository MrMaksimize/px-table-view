/// @group px
/// @author Jonnie Spratley
///Variables
@import "variables";

////
/// Block Element
/// @access public
/// @param {String} $element - Element's name
/// @example scss Block element
///    .block {
///      // CSS declarations for .block
///      @include element('element') {
///           //CSS declarations for .block__element
///      }
///
///      @include modifier('modifier') {
///          // CSS declarations for .block--modifier
///
///          @include element('element') {
///              // CSS declarations for .block--modifier__element
///          }
///      }
///   }
///
@mixin element($element) {
  &__#{$element} {
    @content;
  }
}
/// Block Modifier
/// @access public
/// @param {String} $modifier - Modifier's name
/// @example scss
///     @include modifier('modifier') {
///        // CSS declarations for .block--modifier
///        @include element('element') {
///           // CSS declarations for .block--modifier__element
///        }
///     }
@mixin modifier($modifier) {
  &--#{$modifier} {
    @content;
  }
}
/// @alias element
@mixin e($element) {
  @include element($element) {
    @content;
  }
}
/// @alias modifier
@mixin m($modifier) {
  @include modifier($modifier) {
    @content;
  }
}



/// Make a list item clickable
@mixin tableRowClickable($bg, $font) {
  transition: background-color 0.2s linear;
  &:active {
    color: $font !important;
    background-color: $bg;
    transition: none;
  }
  &:hover {
    transition: none;
  }
  @content;
}


///Style an action button
@mixin actionButton($color) {
  user-select:none;
  transition: background-color 0.2s linear;
  background-color: $color;
  //	border-color: darken($color, 25%);
  border: none;
  outline:none;
  &:active {
    background-color: darken($color, 20%);
  }

  &:hover {
    background-color: darken($color, 15%);
  }
  @content;
}


/// Mixin to make list turn into columns on larger screen. Similar to App Store
/// On iPad there are grid list
/// On iPhone there grid column
@mixin n-columns($min-width, $gutter, $last-equal: false, $max-cols: 6) {
  display: flex;
  flex-wrap: wrap;
  margin-left: -$gutter;
  margin-top: -$gutter;
  .table-row {
    flex: 1 0 $min-width;
    margin-left: $gutter;
    margin-top: $gutter;
    @if $last-equal {
      @for $i from 2 through $max-cols {
        $screen-width: ($min-width*$i)+($gutter*$i);
        $column-width: (100%/$i);
        @media (min-width: $screen-width) {
          max-width: calc(#{$column-width} - #{$gutter});
        }
      }
      $column-width: (100%/$max-cols);
      @media (min-width: $min-width*$max-cols) {
        min-width: calc(#{$column-width} - #{$gutter});
      }
    }
  }
}




@mixin clearfix() {
	&:before,
	&:after {
		display: table;
		content: " ";
	}
	&:after {
		clear: both;
	}
	@content;
}

@mixin scrollable() {
	overflow-y: scroll;
	overflow-y: auto;
	-webkit-overflow-scrolling: touch;
	@content;
}




@mixin tableRowIcon($icon, $iconColor: $table-row-border-color, $position:'right') {
	transition: background-color 0.2s linear;
	overflow: hidden;
	//	background-color: rgba(0,0,0,.5);
	&:active {
		background-color: $table-row-active-background-color;
		transition: none;
	}
	&:before {
		transform: translateY(-50%);
		font-style: normal;
		font-weight: normal;
		position: absolute;
    right: 12px;
		top: 50%;
		color: $iconColor;
		line-height: 28px;
		height: 28px;
		font-size: 28px;
		font-family: Ionicons;
		content: "#{$icon}";
	}
	&:hover {
		transition: none;
	}
}




@mixin switch() {
	.switch {
		position: relative;
		display: inline-block;
		vertical-align: top;
		box-sizing: border-box;
		background-clip: padding-box;
		position: relative;
		overflow: hidden;
		font-size: 17px;
		padding: 0 20px;
		border: none;
		overflow: visible;
		width: 51px;
		height: 32px;
		z-index: 0;
		text-align: left;
		input {
			position: absolute;
			overflow: hidden;
			right: 0;
			top: 0;
			left: 0;
			bottom: 0;
			padding: 0;
			border: 0;
			opacity: 0.001;
			z-index: 1;
			vertical-align: top;
			outline: none;
			width: 100%;
			height: 100%;
			margin: 0;
			appearance: none;
			width: 51px;
			height: 44px;
			margin-top: -6px;
			top: 0;
			left: 0;
			transition: all 0.2s linear;
		}

		@include element('toggle') {
			background-color: #ddd;
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			border-radius: 30px;
			transition-property: all;
			transition-duration: 0.35s;
			transition-timing-function: ease-out;
			&:before {
				box-sizing: border-box;
				background-clip: padding-box;
				position: absolute;
				content: '';
				border-radius: 28px;
				height: 28px;
				width: 28px;
				background-color: #fff;
				left: 2px;
				top: 2px;
				transition-property: all;
				transition-duration: 0.35s;
				transition-timing-function: cubic-bezier(0.5, 1.6, 0.5, 1);
			}
		}

		input:checked + .toggle {
			background-color: #4cd964;
		}
		input:checked + .toggle:before {
			transform: translateX(18px);
		}
		input:not(:checked) + .toggle:before {
			transform: translateX(0px);
		}
		input:disabled + .toggle {
			opacity: 0.3;
			cursor: default;
			pointer-events: none;
		}
		&.table-row {
			float: right;
			margin-top: 6px;
			margin-right: 10px;
		}
	}
}
